version: '3.8'

services:
  postgres-dev:
    image: postgres:latest
    container_name: postgres_db_CESIZen_dev
    restart: always
    environment:
      POSTGRES_USER: CesiZenAdm
      POSTGRES_PASSWORD: CesiZenAdm59!
      POSTGRES_DB: CesiZenDBDev
    ports:
      - "5434:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - backend-dev-emilien
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U CesiZenAdm"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend-dev:
    build:
      context: ../Backend
      dockerfile: Dockerfile
    container_name: backend-dev
    working_dir: /app
    expose:
      - "5000"
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres-dev;Port=5432;Database=CesiZenDBDev;Username=CesiZenAdm;Password=CesiZenAdm59!
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_PATH=secret/data/cesizen/dev/config
    depends_on:
      - postgres-dev
      - vault
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-dev.rule=Host(`rasphubert.ddns.net`) && PathPrefix(`/emilien-dev/api`)"
      - "traefik.http.middlewares.api-dev-strip.stripprefix.prefixes=/emilien-dev/api"
      - "traefik.http.routers.api-dev.middlewares=api-dev-strip"
      - "traefik.http.services.api-dev.loadbalancer.server.port=5000"
      - "traefik.http.routers.api-dev.entrypoints=websecure"
      - "traefik.http.routers.api-dev.tls.certresolver=le"
    networks:
      - backend-dev-emilien
      - vault-network
      - traefik
    command: ["dotnet", "Backend.dll"]

  frontend-dev:
    build:
      context: ../frontend
      dockerfile: ../Deploiement/Dockerfile.frontend
      args:
        PUBLIC_URL: /emilien-dev
    container_name: frontend-dev
    ports:
      - "4000:80"
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_PATH=secret/data/cesizen/dev/config
      - PUBLIC_URL=/emilien-dev
      - ENV=development
    depends_on:
      - backend-dev
      - vault
    restart: unless-stopped
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front-dev.rule=Host(`rasphubert.ddns.net`) && PathPrefix(`/emilien-dev`)"
      - "traefik.http.services.front-dev.loadbalancer.server.port=80"
      - "traefik.http.routers.front-dev.entrypoints=websecure"
      - "traefik.http.routers.front-dev.tls.certresolver=le"
    networks:
      - frontend-dev-emilien
      - vault-network
      - traefik

  vault:
    image: vault:latest
    container_name: cesizen-vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./init-vault.sh:/app/init-vault.sh
    networks:
      - vault-network
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_dev_data:

networks:
  backend-dev-emilien:
  frontend-dev-emilien:
  vault-network:
  traefik:
    external: true