version: '3.8'

services:
  postgres-dev:
    image: postgres:latest
    container_name: postgres_db_CESIZen_dev
    restart: always
    environment:
      POSTGRES_USER: CesiZenAdm
      POSTGRES_PASSWORD: CesiZenAdm59!
      POSTGRES_DB: CesiZenDBDev
    ports:
      - "5434:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - backend-dev-emilien
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U CesiZenAdm"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend-dev:
    build:
      context: ../Backend
      dockerfile: Dockerfile
    container_name: backend-dev
    working_dir: /app
    expose:
      - "5000"
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres-dev;Port=5432;Database=CesiZenDBDev;Username=CesiZenAdm;Password=CesiZenAdm59!
    depends_on:
      - postgres-dev
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`rasphubert.ddns.net`) && PathPrefix(`/emilien-dev/api`)"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/emilien-dev/api"
      - "traefik.http.routers.api.middlewares=api-strip"
      - "traefik.http.services.api.loadbalancer.server.port=5000"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=le"
    networks:
      - backend-dev-emilien
      - traefik
    command: ["dotnet", "Backend.dll"]

  frontend-dev:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        BASE_HREF: /emilien-dev/
    container_name: frontend-dev
    ports:
      - "4000:80"  # Nginx Ã©coute sur le port 80
    environment:
      - API_URL=/emilien-dev/api
    depends_on:
      - backend-dev
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`rasphubert.ddns.net`) && PathPrefix(`/emilien-dev`)"
      - "traefik.http.services.front.loadbalancer.server.port=80"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=le"
    networks:
      - frontend-dev-emilien
      - traefik

volumes:
  postgres_dev_data:

networks:
  backend-dev-emilien:
  frontend-dev-emilien:
  traefik:
    external: true