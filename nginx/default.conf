server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Configuration des types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Types MIME spécifiques pour JavaScript modules
    types {
        application/javascript js mjs;
        text/javascript js mjs;
    }
    
    # Servir directement les fichiers statiques depuis le frontend
    location ~ ^/emilien-(dev|prod)/assets/ {
        alias /var/www/html/;
        try_files $uri $uri/ =404;
        add_header Cache-Control "public, max-age=31536000";
    }

    # Frontend Nginx (au lieu de SSR Angular)
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # API pour emilien-dev
    location /emilien-dev/api/ {
        proxy_pass http://backend-dev:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API pour emilien-prod
    location /emilien-prod/api/ {
        proxy_pass http://backend-prod:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Routes spécifiques pour emilien-dev
    # Doit être placé après les routes API mais avant les routes génériques
    location /emilien-dev/ {
        # Rediriger vers le frontend-dev
        proxy_pass http://frontend-dev:80/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Pour le rafraîchissement des pages - géré par le conteneur nginx interne
        # Cette directive sera utilisée par le serveur nginx dans le conteneur frontend-dev
        error_page 404 = /emilien-dev/index.html;
    }
    
    # Routes spécifiques pour emilien-prod
    location /emilien-prod/ {
        # Rediriger vers le frontend-prod
        proxy_pass http://frontend-prod:80/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Pour le rafraîchissement des pages - géré par le conteneur nginx interne
        # Cette directive sera utilisée par le serveur nginx dans le conteneur frontend-prod
        error_page 404 = /emilien-prod/index.html;
    }

    # Backend .NET API
    location /api/ {
        proxy_pass http://backend:5016/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration CORS
        add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Traitement spécial pour les requêtes OPTIONS (preflight)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}

# Redirection HTTP vers HTTPS
server {
    listen 80;
    server_name localhost;

    return 301 https://$host$request_uri;
}

# Serveur pour rediriger les requêtes 5001 vers 5016
server {
    listen 5001;
    server_name localhost;
    
    location / {
        proxy_pass http://localhost:5016;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration CORS
        add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}
