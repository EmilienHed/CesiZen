version: '3.8'

services:
  # Service Nginx principal (proxy inverse)
  nginx:
    image: nginx:alpine
    container_name: cesizen-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - frontend-dev
      - frontend-prod
      - backend-dev
      - backend-prod
    depends_on:
      - frontend-dev
      - frontend-prod
      - backend-dev
      - backend-prod

  # Frontend - Environnement de développement
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      args:
        PUBLIC_URL: /emilien-dev
    container_name: cesizen-front-dev
    depends_on:
      - backend-dev
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_PATH=secret/data/cesizen/dev/config
      - PUBLIC_URL=/emilien-dev
      - ENV=development
    networks:
      - frontend-dev

  # Frontend - Environnement de production
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      args:
        PUBLIC_URL: /emilien-prod
    container_name: cesizen-front-prod
    depends_on:
      - backend-prod
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_PATH=secret/data/cesizen/prod/config
      - PUBLIC_URL=/emilien-prod
      - ENV=production
    networks:
      - frontend-prod

  # Backend - Environnement de développement
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cesizen-api-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_PATH=secret/data/cesizen/dev/config
    networks:
      - backend-dev

  # Backend - Environnement de production
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cesizen-api-prod
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_PATH=secret/data/cesizen/prod/config
    networks:
      - backend-prod

  # Service Vault pour la gestion des secrets
  vault:
    image: vault:latest
    container_name: cesizen-vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - frontend-dev
      - frontend-prod
      - backend-dev
      - backend-prod

volumes:
  postgres_data:
  static_assets:

networks:
  frontend-dev:
  frontend-prod:
  backend-dev:
  backend-prod:
